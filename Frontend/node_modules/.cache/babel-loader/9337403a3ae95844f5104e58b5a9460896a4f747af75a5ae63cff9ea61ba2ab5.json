{"ast":null,"code":"var _jsxFileName = \"E:\\\\COSWO\\\\Frontend\\\\src\\\\Pages\\\\UploadProof.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport base44 from \"../api/base44Client\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../Components/ui/card\";\nimport { Input } from \"../Components/ui/input\";\nimport { Button } from \"../Components/ui/button\";\nimport { Label } from \"../Components/ui/label\";\nimport { Textarea } from \"../Components/ui/textarea\";\nimport { Select, SelectItem } from \"../Components/ui/select\";\nimport { Upload, Camera, Loader2, CheckCircle } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadProof() {\n  _s();\n  const queryClient = useQueryClient();\n  const [selectedDonation, setSelectedDonation] = useState(\"\");\n  const [uploadNotes, setUploadNotes] = useState(\"\");\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const {\n    data: donations = [],\n    isLoading: donationsLoading\n  } = useQuery({\n    queryKey: ['donations-for-proof'],\n    queryFn: () => base44.entities.Donation.filter({\n      status: \"in_transit\"\n    }, '-created_date'),\n    initialData: []\n  });\n  const {\n    data: receivers = [],\n    isLoading: receiversLoading\n  } = useQuery({\n    queryKey: ['receivers'],\n    queryFn: () => base44.entities.Receiver.list(),\n    initialData: []\n  });\n  const updateDonationMutation = useMutation({\n    mutationFn: ({\n      id,\n      data\n    }) => base44.entities.Donation.update(id, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['donations']\n      });\n    }\n  });\n  const sendProofEmailMutation = useMutation({\n    mutationFn: async ({\n      donation,\n      bestProofs,\n      receiver\n    }) => {\n      const proofImagesHtml = bestProofs.map(proof => `<div style=\"margin-bottom: 10px;\">\n           <img src=\"${proof.file_url}\" style=\"max-width: 100%; height: auto; display: block; margin: 0 auto; border-radius: 8px;\" />\n           <p style=\"text-align: center; font-size: 12px; color: #555; margin-top: 5px;\">Quality Score: ${proof.quality_score || 'N/A'}</p>\n         </div>`).join('');\n      const emailBody = `\n        <div style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n          <h2 style=\"color: #0056b3;\">Donation Delivery Confirmation</h2>\n          <p>Dear Donor,</p>\n          <p>Your donation has been successfully delivered! Thank you for your generous contribution. Here are the details and photo proofs of the delivery:</p>\n          \n          <h3 style=\"color: #0056b3;\">Donation Details:</h3>\n          <ul style=\"list-style-type: none; padding: 0;\">\n            <li style=\"margin-bottom: 5px;\"><strong>Donor ID:</strong> ${donation.donor_id}</li>\n            <li style=\"margin-bottom: 5px;\"><strong>Donation Type:</strong> ${donation.donation_type}</li>\n            <li style=\"margin-bottom: 5px;\"><strong>Amount:</strong> ${donation.amount ? '$' + donation.amount.toFixed(2) : 'N/A'}</li>\n            <li style=\"margin-bottom: 5px;\"><strong>Delivery Date:</strong> ${new Date().toLocaleDateString()}</li>\n          </ul>\n\n          <h3 style=\"color: #0056b3;\">Receiver Details:</h3>\n          <ul style=\"list-style-type: none; padding: 0;\">\n            <li style=\"margin-bottom: 5px;\"><strong>Name:</strong> ${receiver.full_name}</li>\n            <li style=\"margin-bottom: 5px;\"><strong>Location:</strong> ${receiver.address}</li>\n          </ul>\n\n          <h3 style=\"color: #0056b3;\">Delivery Proofs:</h3>\n          <p>Here are the best available proofs from the delivery:</p>\n          <div style=\"margin-top: 15px;\">\n            ${proofImagesHtml}\n          </div>\n\n          <p style=\"margin-top: 20px;\">Thank you for your generous contribution and for bringing a smile to someone's face!</p>\n          <p>With gratitude,<br/>The COSWO Team</p>\n        </div>\n      `;\n      return await base44.integrations.Core.SendEmail({\n        from_name: \"COSWO Platform\",\n        to: donation.donor_email,\n        subject: `Delivery Confirmed for Donation to ${receiver.full_name} (ID: ${donation.id.slice(-6)})`,\n        body: emailBody\n      });\n    }\n  });\n  const handleFileSelect = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n  };\n  const analyzeImageQuality = async fileUrl => {\n    try {\n      const result = await base44.integrations.Core.InvokeLLM({\n        prompt: `Analyze this delivery proof image and rate its quality from 0-100 based on:\n        1. Clarity and sharpness (40 points)\n        2. Proper lighting (20 points)\n        3. Shows people receiving donation clearly (20 points)\n        4. No blur or obstruction (20 points)\n        Return only a number between 0-100.`,\n        file_urls: [fileUrl],\n        response_json_schema: {\n          type: \"object\",\n          properties: {\n            score: {\n              type: \"number\"\n            }\n          }\n        }\n      });\n      return result.score || 70;\n    } catch {\n      return 70;\n    }\n  };\n  const handleUpload = async () => {\n    if (!selectedDonation || files.length === 0) {\n      alert(\"Please select a donation and upload at least one file\");\n      return;\n    }\n    setUploading(true);\n    try {\n      const donation = donations.find(d => d.id === selectedDonation);\n      if (!donation) {\n        alert(\"Error: Could not find the selected donation details. Please refresh and try again.\");\n        setUploading(false);\n        return;\n      }\n      const receiver = receivers.find(r => r.id === donation.receiver_id);\n      if (!receiver) {\n        alert(\"Error: Could not find the receiver details for this donation. Please refresh and try again.\");\n        setUploading(false);\n        return;\n      }\n      const user = await base44.auth.me();\n      const uploadedProofs = [];\n      for (const file of files) {\n        const {\n          file_url\n        } = await base44.integrations.Core.UploadFile({\n          file\n        });\n        const isVideo = file.type.startsWith('video/');\n        const qualityScore = isVideo ? 80 : await analyzeImageQuality(file_url);\n        const proof = await base44.entities.DonationProof.create({\n          donation_id: selectedDonation,\n          file_url,\n          proof_type: isVideo ? 'video' : 'photo',\n          quality_score: qualityScore,\n          uploaded_by: user.email,\n          upload_notes: uploadNotes,\n          is_selected: false\n        });\n        uploadedProofs.push(proof);\n      }\n\n      // Select top 3 proofs\n      const bestProofs = uploadedProofs.sort((a, b) => (b.quality_score || 0) - (a.quality_score || 0)).slice(0, 3);\n\n      // Mark top proofs as selected\n      for (const proof of bestProofs) {\n        await base44.entities.DonationProof.update(proof.id, {\n          is_selected: true\n        });\n      }\n      await updateDonationMutation.mutateAsync({\n        id: selectedDonation,\n        data: {\n          status: 'delivered',\n          actual_delivery: new Date().toISOString()\n        }\n      });\n      await sendProofEmailMutation.mutateAsync({\n        donation,\n        bestProofs,\n        // Pass top proofs to email function\n        receiver\n      });\n      await updateDonationMutation.mutateAsync({\n        id: selectedDonation,\n        data: {\n          proof_sent: true,\n          status: 'confirmed'\n        }\n      });\n      alert(\"Proofs uploaded successfully and email sent to donor!\");\n      setSelectedDonation(\"\");\n      setUploadNotes(\"\");\n      setFiles([]);\n    } catch (error) {\n      alert(\"Error uploading proofs. Please try again.\");\n      console.error(error);\n    }\n    setUploading(false);\n  };\n  const isLoading = donationsLoading || receiversLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-6 bg-gradient-to-br from-blue-50 via-white to-orange-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold bg-gradient-to-r from-blue-600 to-orange-600 bg-clip-text text-transparent\",\n          children: \"Upload Delivery Proof\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Document successful donation deliveries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"backdrop-blur-sm bg-white/90 border-gray-200/80 shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"flex items-center gap-2 text-2xl\",\n            children: [/*#__PURE__*/_jsxDEV(Camera, {\n              className: \"w-6 h-6 text-blue-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), \"Proof Upload\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"donation\",\n              children: \"Select Donation *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedDonation,\n              onChange: e => setSelectedDonation(e.target.value),\n              placeholder: isLoading ? \"Loading donations...\" : \"Choose a donation in transit\",\n              disabled: isLoading,\n              children: donations.map(donation => {\n                const receiver = receivers.find(r => r.id === donation.receiver_id);\n                return /*#__PURE__*/_jsxDEV(SelectItem, {\n                  value: donation.id,\n                  children: `Donation to ${(receiver === null || receiver === void 0 ? void 0 : receiver.full_name) || 'Unknown'} (${donation.donation_type})`\n                }, donation.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"files\",\n              children: \"Upload Photos/Videos *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"files\",\n              type: \"file\",\n              multiple: true,\n              accept: \"image/*,video/*\",\n              onChange: handleFileSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [files.length, \" file\", files.length > 1 ? 's' : '', \" selected\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"notes\",\n              children: \"Upload Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              id: \"notes\",\n              placeholder: \"Add any notes about the delivery...\",\n              value: uploadNotes,\n              onChange: e => setUploadNotes(e.target.value),\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleUpload,\n            disabled: uploading || !selectedDonation || files.length === 0,\n            className: \"w-full px-6 py-3 text-white bg-gradient-to-r from-blue-600 to-orange-600 hover:from-blue-700 hover:to-orange-700\",\n            size: \"lg\",\n            children: uploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                className: \"w-6 h-6 mr-3 animate-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), \"Uploading & Analyzing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                className: \"w-6 h-6 mr-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), \"Upload Proof & Notify Donor\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-blue-800\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"w-4 h-4 inline mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), \"The system will automatically analyze image quality and send the best 3 proofs to the donor via email.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadProof, \"UNeMrO0On21uEpflW3Me5SMguqE=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation, useMutation];\n});\n_c = UploadProof;\nvar _c;\n$RefreshReg$(_c, \"UploadProof\");","map":{"version":3,"names":["React","useState","base44","useQuery","useMutation","useQueryClient","Card","CardContent","CardHeader","CardTitle","Input","Button","Label","Textarea","Select","SelectItem","Upload","Camera","Loader2","CheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadProof","_s","queryClient","selectedDonation","setSelectedDonation","uploadNotes","setUploadNotes","files","setFiles","uploading","setUploading","data","donations","isLoading","donationsLoading","queryKey","queryFn","entities","Donation","filter","status","initialData","receivers","receiversLoading","Receiver","list","updateDonationMutation","mutationFn","id","update","onSuccess","invalidateQueries","sendProofEmailMutation","donation","bestProofs","receiver","proofImagesHtml","map","proof","file_url","quality_score","join","emailBody","donor_id","donation_type","amount","toFixed","Date","toLocaleDateString","full_name","address","integrations","Core","SendEmail","from_name","to","donor_email","subject","slice","body","handleFileSelect","e","selectedFiles","Array","from","target","analyzeImageQuality","fileUrl","result","InvokeLLM","prompt","file_urls","response_json_schema","type","properties","score","handleUpload","length","alert","find","d","r","receiver_id","user","auth","me","uploadedProofs","file","UploadFile","isVideo","startsWith","qualityScore","DonationProof","create","donation_id","proof_type","uploaded_by","email","upload_notes","is_selected","push","sort","a","b","mutateAsync","actual_delivery","toISOString","proof_sent","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","placeholder","disabled","multiple","accept","rows","onClick","size","_c","$RefreshReg$"],"sources":["E:/COSWO/Frontend/src/Pages/UploadProof.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport base44 from \"../api/base44Client\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"../Components/ui/card\";\r\nimport { Input } from \"../Components/ui/input\";\r\nimport { Button } from \"../Components/ui/button\";\r\nimport { Label } from \"../Components/ui/label\";\r\nimport { Textarea } from \"../Components/ui/textarea\";\r\nimport { Select, SelectItem } from \"../Components/ui/select\";\r\nimport { Upload, Camera, Loader2, CheckCircle } from \"lucide-react\";\r\n\r\nexport default function UploadProof() {\r\n  const queryClient = useQueryClient();\r\n  const [selectedDonation, setSelectedDonation] = useState(\"\");\r\n  const [uploadNotes, setUploadNotes] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const { data: donations = [], isLoading: donationsLoading } = useQuery({\r\n    queryKey: ['donations-for-proof'],\r\n    queryFn: () => base44.entities.Donation.filter({ status: \"in_transit\" }, '-created_date'),\r\n    initialData: []\r\n  });\r\n\r\n  const { data: receivers = [], isLoading: receiversLoading } = useQuery({\r\n    queryKey: ['receivers'],\r\n    queryFn: () => base44.entities.Receiver.list(),\r\n    initialData: []\r\n  });\r\n\r\n  const updateDonationMutation = useMutation({\r\n    mutationFn: ({ id, data }) => base44.entities.Donation.update(id, data),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['donations'] });\r\n    }\r\n  });\r\n\r\n  const sendProofEmailMutation = useMutation({\r\n    mutationFn: async ({ donation, bestProofs, receiver }) => {\r\n      const proofImagesHtml = bestProofs.map(proof =>\r\n        `<div style=\"margin-bottom: 10px;\">\r\n           <img src=\"${proof.file_url}\" style=\"max-width: 100%; height: auto; display: block; margin: 0 auto; border-radius: 8px;\" />\r\n           <p style=\"text-align: center; font-size: 12px; color: #555; margin-top: 5px;\">Quality Score: ${proof.quality_score || 'N/A'}</p>\r\n         </div>`\r\n      ).join('');\r\n\r\n      const emailBody = `\r\n        <div style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\r\n          <h2 style=\"color: #0056b3;\">Donation Delivery Confirmation</h2>\r\n          <p>Dear Donor,</p>\r\n          <p>Your donation has been successfully delivered! Thank you for your generous contribution. Here are the details and photo proofs of the delivery:</p>\r\n          \r\n          <h3 style=\"color: #0056b3;\">Donation Details:</h3>\r\n          <ul style=\"list-style-type: none; padding: 0;\">\r\n            <li style=\"margin-bottom: 5px;\"><strong>Donor ID:</strong> ${donation.donor_id}</li>\r\n            <li style=\"margin-bottom: 5px;\"><strong>Donation Type:</strong> ${donation.donation_type}</li>\r\n            <li style=\"margin-bottom: 5px;\"><strong>Amount:</strong> ${donation.amount ? '$' + donation.amount.toFixed(2) : 'N/A'}</li>\r\n            <li style=\"margin-bottom: 5px;\"><strong>Delivery Date:</strong> ${new Date().toLocaleDateString()}</li>\r\n          </ul>\r\n\r\n          <h3 style=\"color: #0056b3;\">Receiver Details:</h3>\r\n          <ul style=\"list-style-type: none; padding: 0;\">\r\n            <li style=\"margin-bottom: 5px;\"><strong>Name:</strong> ${receiver.full_name}</li>\r\n            <li style=\"margin-bottom: 5px;\"><strong>Location:</strong> ${receiver.address}</li>\r\n          </ul>\r\n\r\n          <h3 style=\"color: #0056b3;\">Delivery Proofs:</h3>\r\n          <p>Here are the best available proofs from the delivery:</p>\r\n          <div style=\"margin-top: 15px;\">\r\n            ${proofImagesHtml}\r\n          </div>\r\n\r\n          <p style=\"margin-top: 20px;\">Thank you for your generous contribution and for bringing a smile to someone's face!</p>\r\n          <p>With gratitude,<br/>The COSWO Team</p>\r\n        </div>\r\n      `;\r\n\r\n      return await base44.integrations.Core.SendEmail({\r\n        from_name: \"COSWO Platform\",\r\n        to: donation.donor_email,\r\n        subject: `Delivery Confirmed for Donation to ${receiver.full_name} (ID: ${donation.id.slice(-6)})`,\r\n        body: emailBody\r\n      });\r\n    }\r\n  });\r\n\r\n  const handleFileSelect = (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    setFiles(selectedFiles);\r\n  };\r\n\r\n  const analyzeImageQuality = async (fileUrl) => {\r\n    try {\r\n      const result = await base44.integrations.Core.InvokeLLM({\r\n        prompt: `Analyze this delivery proof image and rate its quality from 0-100 based on:\r\n        1. Clarity and sharpness (40 points)\r\n        2. Proper lighting (20 points)\r\n        3. Shows people receiving donation clearly (20 points)\r\n        4. No blur or obstruction (20 points)\r\n        Return only a number between 0-100.`,\r\n        file_urls: [fileUrl],\r\n        response_json_schema: {\r\n          type: \"object\",\r\n          properties: {\r\n            score: { type: \"number\" }\r\n          }\r\n        }\r\n      });\r\n      return result.score || 70;\r\n    } catch {\r\n      return 70;\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedDonation || files.length === 0) {\r\n      alert(\"Please select a donation and upload at least one file\");\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const donation = donations.find(d => d.id === selectedDonation);\r\n      if (!donation) {\r\n        alert(\"Error: Could not find the selected donation details. Please refresh and try again.\");\r\n        setUploading(false);\r\n        return;\r\n      }\r\n      const receiver = receivers.find(r => r.id === donation.receiver_id);\r\n      if (!receiver) {\r\n        alert(\"Error: Could not find the receiver details for this donation. Please refresh and try again.\");\r\n        setUploading(false);\r\n        return;\r\n      }\r\n\r\n      const user = await base44.auth.me();\r\n\r\n      const uploadedProofs = [];\r\n\r\n      for (const file of files) {\r\n        const { file_url } = await base44.integrations.Core.UploadFile({ file });\r\n        const isVideo = file.type.startsWith('video/');\r\n        const qualityScore = isVideo ? 80 : await analyzeImageQuality(file_url);\r\n\r\n        const proof = await base44.entities.DonationProof.create({\r\n          donation_id: selectedDonation,\r\n          file_url,\r\n          proof_type: isVideo ? 'video' : 'photo',\r\n          quality_score: qualityScore,\r\n          uploaded_by: user.email,\r\n          upload_notes: uploadNotes,\r\n          is_selected: false\r\n        });\r\n\r\n        uploadedProofs.push(proof);\r\n      }\r\n\r\n      // Select top 3 proofs\r\n      const bestProofs = uploadedProofs\r\n        .sort((a, b) => (b.quality_score || 0) - (a.quality_score || 0))\r\n        .slice(0, 3);\r\n\r\n      // Mark top proofs as selected\r\n      for (const proof of bestProofs) {\r\n        await base44.entities.DonationProof.update(proof.id, { is_selected: true });\r\n      }\r\n\r\n      await updateDonationMutation.mutateAsync({\r\n        id: selectedDonation,\r\n        data: {\r\n          status: 'delivered',\r\n          actual_delivery: new Date().toISOString()\r\n        }\r\n      });\r\n\r\n      await sendProofEmailMutation.mutateAsync({\r\n        donation,\r\n        bestProofs, // Pass top proofs to email function\r\n        receiver\r\n      });\r\n\r\n      await updateDonationMutation.mutateAsync({\r\n        id: selectedDonation,\r\n        data: { proof_sent: true, status: 'confirmed' }\r\n      });\r\n\r\n      alert(\"Proofs uploaded successfully and email sent to donor!\");\r\n      setSelectedDonation(\"\");\r\n      setUploadNotes(\"\");\r\n      setFiles([]);\r\n    } catch (error) {\r\n      alert(\"Error uploading proofs. Please try again.\");\r\n      console.error(error);\r\n    }\r\n\r\n    setUploading(false);\r\n  };\r\n\r\n  const isLoading = donationsLoading || receiversLoading;\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-6 bg-gradient-to-br from-blue-50 via-white to-orange-50\">\r\n      <div className=\"max-w-3xl mx-auto\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-blue-600 to-orange-600 bg-clip-text text-transparent\">\r\n            Upload Delivery Proof\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-2\">Document successful donation deliveries</p>\r\n        </div>\r\n\r\n        <Card className=\"backdrop-blur-sm bg-white/90 border-gray-200/80 shadow-xl\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2 text-2xl\">\r\n              <Camera className=\"w-6 h-6 text-blue-600\" />\r\n              Proof Upload\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"donation\">Select Donation *</Label>\r\n              <Select\r\n                value={selectedDonation}\r\n                onChange={e => setSelectedDonation(e.target.value)}\r\n                placeholder={isLoading ? \"Loading donations...\" : \"Choose a donation in transit\"}\r\n                disabled={isLoading}\r\n              >\r\n                {donations.map(donation => {\r\n                  const receiver = receivers.find(r => r.id === donation.receiver_id);\r\n                  return (\r\n                    <SelectItem key={donation.id} value={donation.id}>\r\n                      {`Donation to ${receiver?.full_name || 'Unknown'} (${donation.donation_type})`}\r\n                    </SelectItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"files\">Upload Photos/Videos *</Label>\r\n              <Input\r\n                id=\"files\"\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*,video/*\"\r\n                onChange={handleFileSelect}\r\n              />\r\n              {files.length > 0 && (\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {files.length} file{files.length > 1 ? 's' : ''} selected\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"notes\">Upload Notes</Label>\r\n              <Textarea\r\n                id=\"notes\"\r\n                placeholder=\"Add any notes about the delivery...\"\r\n                value={uploadNotes}\r\n                onChange={(e) => setUploadNotes(e.target.value)}\r\n                rows={4}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              onClick={handleUpload}\r\n              disabled={uploading || !selectedDonation || files.length === 0}\r\n              className=\"w-full px-6 py-3 text-white bg-gradient-to-r from-blue-600 to-orange-600 hover:from-blue-700 hover:to-orange-700\"\r\n              size=\"lg\"\r\n            >\r\n              {uploading ? (\r\n                <>\r\n                  <Loader2 className=\"w-6 h-6 mr-3 animate-spin\" />\r\n                  Uploading & Analyzing...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Upload className=\"w-6 h-6 mr-3\" />\r\n                  Upload Proof & Notify Donor\r\n                </>\r\n              )}\r\n            </Button>\r\n\r\n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n              <p className=\"text-sm text-blue-800\">\r\n                <CheckCircle className=\"w-4 h-4 inline mr-2\" />\r\n                The system will automatically analyze image quality and send the best 3 proofs to the donor via email.\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}