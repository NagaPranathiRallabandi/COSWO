{"ast":null,"code":"import apiClient from \"../api/apiClient\";\nexport async function getBatchStats() {\n  // Get all donations for this batch staff (assigned to them)\n  // For now, we assume all donations are visible; in a real app, filter by batch staff id\n  const {\n    data\n  } = await apiClient.get(\"/donations\");\n  const now = new Date();\n  const thisMonth = now.getMonth();\n  const thisYear = now.getFullYear();\n  let assignedThisMonth = 0;\n  let delivered = 0;\n  let ongoing = 0;\n  data.forEach(donation => {\n    const created = new Date(donation.createdAt || donation.created_at || donation.created_date || donation.timestamp || donation.updatedAt || 0);\n    if (created.getMonth() === thisMonth && created.getFullYear() === thisYear) {\n      assignedThisMonth++;\n    }\n    if (donation.status === \"delivered\" || donation.status === \"confirmed\") {\n      delivered++;\n    } else if (donation.status === \"in_transit\" || donation.status === \"pending\") {\n      ongoing++;\n    }\n  });\n  return {\n    assignedThisMonth,\n    delivered,\n    ongoing\n  };\n}","map":{"version":3,"names":["apiClient","getBatchStats","data","get","now","Date","thisMonth","getMonth","thisYear","getFullYear","assignedThisMonth","delivered","ongoing","forEach","donation","created","createdAt","created_at","created_date","timestamp","updatedAt","status"],"sources":["E:/COSWO/Frontend/src/api/batchStaffApi.js"],"sourcesContent":["import apiClient from \"../api/apiClient\";\r\n\r\nexport async function getBatchStats() {\r\n  // Get all donations for this batch staff (assigned to them)\r\n  // For now, we assume all donations are visible; in a real app, filter by batch staff id\r\n  const { data } = await apiClient.get(\"/donations\");\r\n  const now = new Date();\r\n  const thisMonth = now.getMonth();\r\n  const thisYear = now.getFullYear();\r\n\r\n  let assignedThisMonth = 0;\r\n  let delivered = 0;\r\n  let ongoing = 0;\r\n\r\n  data.forEach((donation) => {\r\n    const created = new Date(donation.createdAt || donation.created_at || donation.created_date || donation.timestamp || donation.updatedAt || 0);\r\n    if (\r\n      created.getMonth() === thisMonth &&\r\n      created.getFullYear() === thisYear\r\n    ) {\r\n      assignedThisMonth++;\r\n    }\r\n    if (donation.status === \"delivered\" || donation.status === \"confirmed\") {\r\n      delivered++;\r\n    } else if (donation.status === \"in_transit\" || donation.status === \"pending\") {\r\n      ongoing++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    assignedThisMonth,\r\n    delivered,\r\n    ongoing,\r\n  };\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,kBAAkB;AAExC,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC;EACA;EACA,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,SAAS,CAACG,GAAG,CAAC,YAAY,CAAC;EAClD,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,SAAS,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;EAChC,MAAMC,QAAQ,GAAGJ,GAAG,CAACK,WAAW,CAAC,CAAC;EAElC,IAAIC,iBAAiB,GAAG,CAAC;EACzB,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,OAAO,GAAG,CAAC;EAEfV,IAAI,CAACW,OAAO,CAAEC,QAAQ,IAAK;IACzB,MAAMC,OAAO,GAAG,IAAIV,IAAI,CAACS,QAAQ,CAACE,SAAS,IAAIF,QAAQ,CAACG,UAAU,IAAIH,QAAQ,CAACI,YAAY,IAAIJ,QAAQ,CAACK,SAAS,IAAIL,QAAQ,CAACM,SAAS,IAAI,CAAC,CAAC;IAC7I,IACEL,OAAO,CAACR,QAAQ,CAAC,CAAC,KAAKD,SAAS,IAChCS,OAAO,CAACN,WAAW,CAAC,CAAC,KAAKD,QAAQ,EAClC;MACAE,iBAAiB,EAAE;IACrB;IACA,IAAII,QAAQ,CAACO,MAAM,KAAK,WAAW,IAAIP,QAAQ,CAACO,MAAM,KAAK,WAAW,EAAE;MACtEV,SAAS,EAAE;IACb,CAAC,MAAM,IAAIG,QAAQ,CAACO,MAAM,KAAK,YAAY,IAAIP,QAAQ,CAACO,MAAM,KAAK,SAAS,EAAE;MAC5ET,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF,OAAO;IACLF,iBAAiB;IACjBC,SAAS;IACTC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}